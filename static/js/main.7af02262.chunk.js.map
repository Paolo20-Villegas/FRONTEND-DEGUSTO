{"version":3,"sources":["reportWebVitals.js","Inicio.js","LoginRegister.js","AgregarNegocio.js","EditarNegocio.js","MenuFunctions.js","VistaUsuario.js","MenuAdmin.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Inicio","navigate","useNavigate","React","createElement","className","onClick","handleStartClick","href","LoginRegister","loginMessage","setLoginMessage","useState","registerMessage","setRegisterMessage","isLoginVisible","setIsLoginVisible","useEffect","messageParam","URLSearchParams","window","location","search","get","id","onSubmit","async","preventDefault","username","target","value","password","console","log","response","axios","post","userName","userPassword","data","person_TypeId","userStatus","personEmail","message","error","_error$response","_error$response$data","type","name","placeholder","required","email","phone","personTypeId","phoneNumber","createDate","Date","toISOString","_error$response2","_error$response2$data","libraries","mapContainerStyle","width","height","center","lat","lng","AgregarNegocio","companyData","setCompanyData","telefono","direccion","latitud","longitud","imageUrl","selected","setSelected","imagePreview","setImagePreview","handleChange","[object Object]","isLoaded","useLoadScript","googleMapsApiKey","onChange","pattern","inputMode","GoogleMap","zoom","event","latLng","fetch","json","_data$results$","results","formatted_address","prevData","Marker","position","readOnly","style","display","justifyContent","alignItems","src","alt","maxWidth","maxHeight","accept","file","files","formData","FormData","append","res","method","body","secure_url","err","businessData","businessName","businessPhoneNumber","businessAddress","businessLatitude","parseFloat","businessLongitude","businessLogo","businessCategorization","businessStatus","business_AreaId","business_UserId","headers","Content-Type","status","alert","EditarNegocio","negocios","setNegocios","editBusiness","setEditBusiness","editedData","setEditedData","negociosFiltrados","keepFetching","ok","push","length","businessId","fetchNegocios","handleInputChange","map","negocio","key","Fragment","_negocios$find","_negocios$find2","updatedBusiness","find","n","put","prevNegocios","handleSaveClick","handleEditClick","delete","filter","handleDeleteClick","MenuFunctions","activeComponent","setActiveComponent","label","component","loadComponent","renderComponent","VistaUsuario","users","setUsers","loading","setLoading","setError","filteredUsers","user","personTypeName","fetchUsers","updateUserStatus","userId","newStatus","prevUsers","index","PersonName","personPhoneNumber","userCreatedAt","toLocaleString","MenuAdmin","App","Router","Routes","Route","path","element","Navigate","to","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.7af02262.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport './Inicio.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Inicio = () => {\r\n  const navigate = useNavigate(); // Crea la función de navegación\r\n\r\n  // Función para manejar el clic en el botón \"Comenzar\"\r\n  const handleStartClick = () => {\r\n    navigate('/loginregister'); // Redirige a la página de Login/Register\r\n  };\r\n\r\n  return (\r\n    <div className=\"inicio-container\">\r\n      <header className=\"inicio-header\">\r\n        <h1>De Gusto</h1>\r\n        <p>¡Nos encargamos de hacer conocer sus negocios!</p>\r\n      </header>\r\n\r\n      <div className=\"inicio-banner\">\r\n        <h2>Bienvenido a nuestra página web</h2>\r\n        <p>¡Descubre cómo podemos ayudarte!</p>\r\n        <button className=\"inicio-button\" onClick={handleStartClick}>Comenzar</button>\r\n      </div>\r\n\r\n      <section className=\"inicio-description\">\r\n        <h3>Sobre Nosotros</h3>\r\n        <p>\r\n          Nuestro sistema se encarga del registro de negocios como por ejemplo restaurantes y sus platos con el fin de hacerlo conocer por su ubicación y beneficiando asi a los dueños de negocios. Todos los datos registrados se mostraran en nuestra aplicación móvil orientada para los clientes que buscan los negocios de su interés y cercanos para ellos que usted registre donde através calificaciones y reseñas puede irse conociendo dentro de DeGusto incrementando su influencia en el área de negocio que haya seleccionado. Para el caso de restaurantes nuestro sistema tiene la capacidad de coordinar reservas con los clientes.\r\n        </p>\r\n      </section>\r\n\r\n      <footer className=\"inicio-footer\">\r\n        <p>© 2024 DeGusto. Todos los derechos reservados.</p>\r\n        <div className=\"social-links\">\r\n          <a href=\"#!\">Facebook</a>\r\n          <a href=\"#!\">Twitter</a>\r\n          <a href=\"#!\">Whatsapp</a>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Inicio;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n//import Cookies from 'js-cookie';\r\nimport './LoginRegister.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginRegister = () => {\r\n  const [loginMessage, setLoginMessage] = useState('');\r\n  const [registerMessage, setRegisterMessage] = useState('');\r\n  const [isLoginVisible, setIsLoginVisible] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Maneja parámetros en la URL para mostrar mensajes específicos\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(window.location.search);\r\n    const messageParam = params.get('message');\r\n\r\n    if (messageParam === 'login_error') {\r\n      setLoginMessage('Correo o contraseña incorrectos.');\r\n    } else if (messageParam === 'register_success') {\r\n      setLoginMessage('Registro exitoso. Por favor, inicia sesión.');\r\n    }\r\n  }, []);\r\n\r\n  // Función para manejar el login\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n\r\n    console.log('Enviando datos:', { username, password });\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'https://api-degusto.onrender.com/api/user/login',\r\n        { userName: username, userPassword: password }\r\n      );\r\n\r\n      console.log('Respuesta del servidor:', response.data);\r\n\r\n      const { person_TypeId, userName, userStatus, personEmail } = response.data;\r\n\r\n      if (userName) {\r\n        if (person_TypeId === 3) {\r\n          // Administrador\r\n          console.log('Bienvenido, administrador');\r\n          navigate('/menuadmin'); // Redirige a la página de administrador\r\n        } else if (person_TypeId === 1) {\r\n          // Dueño de negocio\r\n          if (userStatus === 1) {\r\n            console.log('Bienvenido, dueño de negocio');\r\n            navigate('/menufunctions'); // Redirige a la página de dueño de negocio\r\n          } else if (userStatus === 0) {\r\n            setLoginMessage('Tu cuenta aún no ha sido aprobada. Por favor, espera la confirmación.');\r\n          } else {\r\n            setLoginMessage('Estado de cuenta no reconocido. Contacta con el soporte.');\r\n          }\r\n        } else {\r\n          setLoginMessage('Tipo de usuario no reconocido.');\r\n        }\r\n      } else {\r\n       setLoginMessage(response.data.message || 'Usuario o contraseña incorrectos');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error de login:', error.response?.data?.message || 'Error desconocido');\r\n      setLoginMessage('Error en el inicio de sesión. Por favor, inténtalo de nuevo.');\r\n    }\r\n  };\r\n\r\n  // Función para manejar el registro\r\n  const handleRegister = async (e) => {\r\n    e.preventDefault();\r\n    const name = e.target.name.value;\r\n    const email = e.target.email.value;\r\n    const phone = e.target.phone.value;\r\n    const username = e.target.username.value;\r\n    const password = e.target.password.value;\r\n\r\n    console.log('Enviando datos:', { name, email, phone, username, password });\r\n\r\n    try {\r\n      const response = await axios.post('https://api-degusto.onrender.com/api/user/register', {\r\n        personTypeId: 1, // Asignar \"dueño de negocio\"\r\n        name: name,\r\n        email: email,\r\n        phoneNumber: phone,\r\n        userName: username,\r\n        password: password,\r\n        createDate: new Date().toISOString(), // Formato DD/MM/YYYY\r\n      });\r\n\r\n      console.log('Respuesta del servidor:', response.data);\r\n\r\n      setRegisterMessage('Envío exitoso. Espere hasta que se confirme su registro.');\r\n      setIsLoginVisible(true); // Muestra el formulario de login\r\n    } catch (error) {\r\n      console.error('Error en el registro:', error.response?.data?.message || 'Error desconocido');\r\n      setRegisterMessage('Error en el registro. Por favor, revisa los datos.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <div className=\"contenedor__todo\">\r\n        <div className=\"caja__trasera\">\r\n          <div className=\"caja__trasera-login\">\r\n            <h3>¿Ya tienes una cuenta?</h3>\r\n            <p>Inicia sesión para entrar en la página</p>\r\n            <button id=\"btn__iniciar-sesion\" onClick={() => setIsLoginVisible(true)}>Iniciar Sesión</button>\r\n          </div>\r\n          <div className=\"caja__trasera-register\">\r\n            <h3>¿Aún no tienes una cuenta?</h3>\r\n            <p>Regístrate para que puedas iniciar sesión</p>\r\n            <button id=\"btn__registrarse\" onClick={() => setIsLoginVisible(false)}>Regístrarse</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"body::before \">\r\n      </div>\r\n        <div className=\"contenedor__login-register\">\r\n          {isLoginVisible ? (\r\n            <form onSubmit={handleLogin} className=\"formulario__login\">\r\n              <h2>Iniciar Sesión</h2>\r\n              <input type=\"text\" name=\"username\" placeholder=\"Nombre de Usuario\" required />\r\n              <input type=\"password\" name=\"password\" placeholder=\"Contraseña\" required />\r\n              <button type=\"submit\">Entrar</button>\r\n              <div id=\"login-message\">{loginMessage}</div>\r\n            </form>\r\n          ) : (\r\n            <form onSubmit={handleRegister} className=\"formulario__register\">\r\n              <h2>Regístrarse</h2>\r\n              <input type=\"text\" name=\"name\" placeholder=\"Nombre completo\" required />\r\n              <input type=\"email\" name=\"email\" placeholder=\"Correo Electrónico\" required />\r\n              <input type=\"text\" name=\"phone\" placeholder=\"Número de celular\" required />\r\n              <input type=\"text\" name=\"username\" placeholder=\"Usuario\" required />\r\n              <input type=\"password\" name=\"password\" placeholder=\"Contraseña\" required />\r\n              <button type=\"submit\">Regístrarse</button>\r\n              <div id=\"register-message\">{registerMessage}</div>\r\n            </form>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default LoginRegister;","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { GoogleMap, useLoadScript, Marker } from \"@react-google-maps/api\";\r\nimport \"./AgregarNegocio.css\";\r\n\r\nconst libraries = [\"places\"];\r\nconst mapContainerStyle = {\r\n  width: \"100%\",\r\n  height: \"400px\",\r\n};\r\nconst center = {\r\n  lat: -8.110299569525214,\r\n  lng: -79.02702088064609,\r\n};\r\n\r\nconst AgregarNegocio = () => {\r\n  const [companyData, setCompanyData] = useState({\r\n    name: \"\",\r\n    telefono: \"\",\r\n    direccion: \"\",\r\n    latitud: \"\",\r\n    longitud: \"\",\r\n    imageUrl: \"\",\r\n  });\r\n\r\n  const [selected, setSelected] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const userId = 7; // ID del usuario (puedes reemplazarlo con la lógica para obtenerlo dinámicamente)\r\n\r\n  const handleChange = (e) => {\r\n    setCompanyData({\r\n      ...companyData,\r\n      [e.target.id]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleMapClick = (event) => {\r\n    const lat = event.latLng.lat();\r\n    const lng = event.latLng.lng();\r\n    setSelected({ lat, lng });\r\n    fetch(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=AIzaSyCmta9KsVU-HVVwEYPSxvLb5EafwdsEz48`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const direccion =\r\n          data.results[0]?.formatted_address || \"Dirección no encontrada\";\r\n        setCompanyData((prevData) => ({\r\n          ...prevData,\r\n          direccion,\r\n          latitud: lat,\r\n          longitud: lng,\r\n        }));\r\n      });\r\n  };\r\n\r\n  const handleImageUpload = async (event) => {\r\n    const file = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", \"logo_preset\");\r\n\r\n    try {\r\n      const res = await fetch(\r\n        \"https://api.cloudinary.com/v1_1/derufjp1n/image/upload\",\r\n        {\r\n          method: \"POST\",\r\n          body: formData,\r\n        }\r\n      );\r\n      const data = await res.json();\r\n      setImagePreview(data.secure_url);\r\n      setCompanyData((prevData) => ({\r\n        ...prevData,\r\n        imageUrl: data.secure_url,\r\n      }));\r\n    } catch (err) {\r\n      console.error(\"Error al cargar la imagen:\", err);\r\n    }\r\n  };\r\n\r\n  const handleAddBusiness = async () => {\r\n    const businessData = {\r\n      businessName: companyData.name,\r\n      businessPhoneNumber: companyData.telefono,\r\n      businessAddress: companyData.direccion,\r\n      businessLatitude: parseFloat(companyData.latitud),\r\n      businessLongitude: parseFloat(companyData.longitud),\r\n      businessLogo: companyData.imageUrl || null,\r\n      businessCategorization: 1, // Por defecto, categorización para \"Restaurantes\"\r\n      businessStatus: 1, // Por defecto, estado inicial\r\n      business_AreaId: 1, // Por defecto, el área es \"Restaurantes\"\r\n      business_UserId: userId, // ID del usuario actual\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://api-degusto.onrender.com/api/business\",\r\n        businessData,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.status === 200 || response.status === 201) {\r\n        alert(\"Negocio agregado exitosamente\");\r\n        setCompanyData({\r\n          name: \"\",\r\n          telefono: \"\",\r\n          direccion: \"\",\r\n          latitud: \"\",\r\n          longitud: \"\",\r\n          imageUrl: \"\",\r\n        });\r\n        setImagePreview(null);\r\n        setSelected(null);\r\n      } else {\r\n        alert(\"Error al agregar el negocio\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error al agregar negocio:\", error);\r\n      alert(\"Ocurrió un error al agregar el negocio\");\r\n    }\r\n  };\r\n\r\n  const { isLoaded } = useLoadScript({\r\n    googleMapsApiKey: \"AIzaSyCmta9KsVU-HVVwEYPSxvLb5EafwdsEz48\",\r\n    libraries,\r\n  });\r\n\r\n  if (!isLoaded) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <section className=\"full-width header-well\">\r\n      <div className=\"full-width header-well-icon\">\r\n        <i className=\"zmdi zmdi-balance\"></i>\r\n      </div>\r\n      <div className=\"mdl-grid\">\r\n        <div className=\"mdl-cell mdl-cell--12-col\">\r\n          <div className=\"full-width panel mdl-shadow--2dp\">\r\n            <div className=\"full-width panel-title bg-primary text-center tittles\">\r\n              Nuevo Negocio\r\n            </div>\r\n            <div className=\"full-width panel-content\">\r\n              <form>\r\n                <div className=\"mdl-grid\">\r\n                  <div className=\"mdl-cell mdl-cell--6-col\">\r\n                    <input\r\n                      className=\"mdl-textfield__input\"\r\n                      type=\"text\"\r\n                      id=\"name\"\r\n                      value={companyData.name}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Nombre del negocio\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mdl-cell mdl-cell--6-col\">\r\n                    <input\r\n                      className=\"mdl-textfield__input\"\r\n                      type=\"tel\"\r\n                      id=\"telefono\"\r\n                      value={companyData.telefono}\r\n                      onChange={handleChange}\r\n                      placeholder=\"Número del negocio\"\r\n                      pattern=\"[0-9]*\"\r\n                      inputMode=\"numeric\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mdl-cell mdl-cell--12-col\">\r\n                    <div className=\"map-container\">\r\n                      <GoogleMap\r\n                        mapContainerStyle={mapContainerStyle}\r\n                        zoom={8}\r\n                        center={center}\r\n                        onClick={handleMapClick}\r\n                      >\r\n                        {selected && (\r\n                          <Marker\r\n                            position={{ lat: selected.lat, lng: selected.lng }}\r\n                          />\r\n                        )}\r\n                      </GoogleMap>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mdl-cell mdl-cell--4-col\">\r\n                    <input\r\n                      className=\"mdl-textfield__input\"\r\n                      type=\"text\"\r\n                      id=\"direccion\"\r\n                      value={companyData.direccion}\r\n                      readOnly\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mdl-cell mdl-cell--4-col\">\r\n                    <input\r\n                      className=\"mdl-textfield__input\"\r\n                      type=\"text\"\r\n                      id=\"latitud\"\r\n                      value={companyData.latitud}\r\n                      readOnly\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mdl-cell mdl-cell--4-col\">\r\n                    <input\r\n                      className=\"mdl-textfield__input\"\r\n                      type=\"text\"\r\n                      id=\"longitud\"\r\n                      value={companyData.longitud}\r\n                      readOnly\r\n                      required\r\n                    />\r\n                  </div>\r\n                  <div className=\"mdl-cell mdl-cell--12-col\">\r\n                    <div\r\n                      style={{\r\n                        height: \"200px\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      {imagePreview ? (\r\n                        <img\r\n                          src={imagePreview}\r\n                          alt=\"Previsualización de imagen\"\r\n                          style={{ maxWidth: \"100%\", maxHeight: \"100%\" }}\r\n                        />\r\n                      ) : (\r\n                        <div>Imagen no cargada</div>\r\n                      )}\r\n                    </div>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\"image/*\"\r\n                      onChange={handleImageUpload}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mdl-cell mdl-cell--12-col\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"mdl-button mdl-js-button mdl-button--raised mdl-button--colored\"\r\n                      onClick={handleAddBusiness}\r\n                    >\r\n                      Agregar Negocio\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AgregarNegocio;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./EditarNegocio.css\";\r\n\r\nconst EditarNegocio = () => {\r\n  const [negocios, setNegocios] = useState([]);\r\n  const [editBusiness, setEditBusiness] = useState(null);\r\n  const [editedData, setEditedData] = useState({\r\n    businessName: \"\",\r\n    businessAddress: \"\",\r\n    businessPhoneNumber: \"\",\r\n  });\r\n\r\n  const USER_ID = 7; // ID del usuario que queremos filtrar\r\n\r\n  // Función para obtener los negocios desde la API\r\n  const fetchNegocios = async () => {\r\n    const negociosFiltrados = [];\r\n    let id = 1;\r\n    let keepFetching = true;\r\n\r\n    try {\r\n      while (keepFetching) {\r\n        const response = await fetch(\r\n          `https://api-degusto.onrender.com/api/business/${id}`\r\n        );\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data.business_UserId === USER_ID && data.businessStatus === 1) {\r\n            negociosFiltrados.push({\r\n              id: negociosFiltrados.length + 1,\r\n              businessId: data.businessId,\r\n              businessName: data.businessName,\r\n              businessAddress: data.businessAddress,\r\n              businessPhoneNumber: data.businessPhoneNumber,\r\n              businessStatus: data.businessStatus,\r\n              businessLatitude: data.businessLatitude || 0,\r\n              businessLongitude: data.businessLongitude || 0,\r\n              businessCategorization: data.businessCategorization || 1,\r\n              business_AreaId: data.business_AreaId || 1,\r\n              business_UserId: data.business_UserId,\r\n            });\r\n          }\r\n          id++;\r\n        } else {\r\n          keepFetching = false;\r\n        }\r\n      }\r\n      setNegocios(negociosFiltrados);\r\n    } catch (error) {\r\n      console.error(\"Error al obtener negocios:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNegocios();\r\n  }, []);\r\n\r\n  // Manejar cambios en los campos de entrada de edición\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setEditedData({ ...editedData, [name]: value });\r\n  };\r\n\r\n  // Función para activar la edición\r\n  const handleEditClick = (negocio) => {\r\n    setEditBusiness(negocio.businessId);\r\n    setEditedData({\r\n      businessName: negocio.businessName,\r\n      businessAddress: negocio.businessAddress,\r\n      businessPhoneNumber: negocio.businessPhoneNumber,\r\n    });\r\n  };\r\n\r\n  // Función para guardar los cambios\r\n  const handleSaveClick = async (id) => {\r\n    try {\r\n      const updatedBusiness = {\r\n        businessName: editedData.businessName,\r\n        businessAddress: editedData.businessAddress,\r\n        businessPhoneNumber: editedData.businessPhoneNumber,\r\n        businessStatus: 1,\r\n        businessLatitude: negocios.find((n) => n.businessId === id)\r\n          ?.businessLatitude,\r\n        businessLongitude: negocios.find((n) => n.businessId === id)\r\n          ?.businessLongitude,\r\n        businessCategorization: 1,\r\n        business_AreaId: 1,\r\n        business_UserId: USER_ID,\r\n      };\r\n\r\n      await axios.put(\r\n        `https://api-degusto.onrender.com/api/business/${id}`,\r\n        updatedBusiness\r\n      );\r\n\r\n      setNegocios((prevNegocios) =>\r\n        prevNegocios.map((negocio) =>\r\n          negocio.businessId === id ? { ...negocio, ...updatedBusiness } : negocio\r\n        )\r\n      );\r\n      setEditBusiness(null);\r\n    } catch (error) {\r\n      console.error(\"Error al actualizar el negocio:\", error);\r\n    }\r\n  };\r\n\r\n  // Función para eliminar un negocio\r\n  const handleDeleteClick = async (id) => {\r\n    try {\r\n      await axios.delete(`https://api-degusto.onrender.com/api/business/${id}`);\r\n      setNegocios((prevNegocios) =>\r\n        prevNegocios.filter((negocio) => negocio.businessId !== id)\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error al eliminar el negocio:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"negocio-table-container\">\r\n      <h2>Lista de Negocios</h2>\r\n      <table className=\"negocio-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Nombre Negocio</th>\r\n            <th>Dirección</th>\r\n            <th>Número</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {negocios.map((negocio) => (\r\n            <tr key={negocio.businessId}>\r\n              <td>{negocio.id}</td>\r\n              <td>\r\n                {editBusiness === negocio.businessId ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"businessName\"\r\n                    value={editedData.businessName}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                ) : (\r\n                  negocio.businessName\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editBusiness === negocio.businessId ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"businessAddress\"\r\n                    value={editedData.businessAddress}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                ) : (\r\n                  negocio.businessAddress\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editBusiness === negocio.businessId ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"businessPhoneNumber\"\r\n                    value={editedData.businessPhoneNumber}\r\n                    onChange={handleInputChange}\r\n                  />\r\n                ) : (\r\n                  negocio.businessPhoneNumber\r\n                )}\r\n              </td>\r\n              <td>\r\n                {editBusiness === negocio.businessId ? (\r\n                  <>\r\n                    <button\r\n                      className=\"btn-guardar\"\r\n                      onClick={() => handleSaveClick(negocio.businessId)}\r\n                    >\r\n                      Guardar\r\n                    </button>\r\n                    <button\r\n                      className=\"btn-cancelar\"\r\n                      onClick={() => setEditBusiness(null)}\r\n                    >\r\n                      Cancelar\r\n                    </button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <button\r\n                      className=\"btn-editar\"\r\n                      onClick={() => handleEditClick(negocio)}\r\n                    >\r\n                      Editar\r\n                    </button>\r\n                    <button\r\n                      className=\"btn-eliminar\"\r\n                      onClick={() => handleDeleteClick(negocio.businessId)}\r\n                    >\r\n                      Eliminar\r\n                    </button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditarNegocio;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\"; \r\nimport './MenuFunctions.css';\r\nimport AgregarNegocio from './AgregarNegocio.js';\r\nimport EditarNegocio from './EditarNegocio.js';\r\n\r\nconst MenuFunctions = () => {\r\n  const [activeComponent, setActiveComponent] = useState(\"\"); \r\n  const navigate = useNavigate();\r\n\r\n  const loadComponent = (component) => {\r\n    setActiveComponent(component);\r\n  };\r\n\r\n  const renderComponent = () => {\r\n    switch (activeComponent) {\r\n      case \"agregarnegocio\":\r\n        return <AgregarNegocio />;\r\n      case \"editarnegocio\":\r\n        return <EditarNegocio />;\r\n      default:\r\n        return (\r\n          <div className=\"dashboard\">\r\n            <h2>¡Bienvenido al Panel de Funciones!</h2>\r\n            <p>Selecciona una opción del menú para empezar.</p>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await axios.post(\"https://api-degusto.onrender.com/api/user/logout\");\r\n      if (response.status === 200) {\r\n        console.log('Sesión cerrada');\r\n        navigate(\"/loginregister\");\r\n      } else {\r\n        console.error(\"Error al cerrar sesión:\", response.data);\r\n        alert(\"Hubo un problema al cerrar sesión.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error de red al cerrar sesión:\", error);\r\n      alert(\"Error de red. Por favor, intenta nuevamente.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"owner-container\">\r\n      <nav className=\"owner-menu\">\r\n        <h3 className=\"owner-title\">Panel de Funciones</h3>\r\n        <ul className=\"owner-list\">\r\n          {[ \r\n            { key: \"agregarnegocio\", label: \"Agregar Negocio\" },\r\n            { key: \"editarnegocio\", label: \"Tus Negocios\" } // Solo dejamos estas opciones\r\n          ].map(({ key, label }) => (\r\n            <li\r\n              key={key}\r\n              className={activeComponent === key ? \"active\" : \"\"}\r\n              onClick={() => loadComponent(key)}\r\n            >\r\n              {label}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n      <div className=\"owner-main\">\r\n        <header className=\"owner-header\">\r\n          <span>Bienvenido, Dueño de Negocio!</span>\r\n          <button className=\"btn-logout\" onClick={handleLogout}>Cerrar Sesión</button>\r\n        </header>\r\n        <div className=\"content\">{renderComponent()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuFunctions;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./VistaUsuario.css\";\r\n\r\nconst VistaUsuario = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Indicador de carga\r\n  const [error, setError] = useState(null); // Manejo de errores\r\n\r\n  // Función para obtener los usuarios desde la API\r\n  const fetchUsers = async () => {\r\n    try {\r\n      const response = await axios.get(\"https://api-degusto.onrender.com/api/user\");\r\n      const filteredUsers = response.data.filter(\r\n        (user) => user.personTypeName === \"Owner\" || user.personTypeName === \"Customer\"\r\n      );\r\n      setUsers(filteredUsers);\r\n    } catch (err) {\r\n      console.error(\"Error al obtener los usuarios:\", err);\r\n      setError(\"No se pudieron cargar los usuarios.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Efecto para cargar los usuarios al montar el componente\r\n  useEffect(() => {\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Función para actualizar el estado del usuario (Validar, Denegar o Eliminar)\r\n  const updateUserStatus = async (userId, newStatus) => {\r\n    try {\r\n      // Si el estado es \"Eliminado\", hacemos una llamada DELETE a la API\r\n      if (newStatus === \"Eliminado\") {\r\n        await axios.delete(`https://api-degusto.onrender.com/api/user/${userId}`);\r\n        setUsers((prevUsers) => prevUsers.filter((user) => user.userId !== userId));\r\n      } else {\r\n        await axios.put(`https://api-degusto.onrender.com/api/user/${userId}`, {\r\n          userStatus: newStatus,\r\n        });\r\n        setUsers((prevUsers) =>\r\n          prevUsers.map((user) =>\r\n            user.userId === userId ? { ...user, userStatus: newStatus } : user\r\n          )\r\n        );\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error al actualizar el estado del usuario:\", err);\r\n    }\r\n  };\r\n\r\n  // Mostrar indicador de carga\r\n  if (loading) return <div>Cargando usuarios...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"user-table-container\">\r\n      <h2>Lista de Usuarios</h2>\r\n      <table className=\"user-table\">\r\n        <thead>\r\n          <tr>\r\n            <th>Nro</th>\r\n            <th>Usuario</th>\r\n            <th>Nombre</th>\r\n            <th>Email</th>\r\n            <th>Teléfono</th>\r\n            <th>Tipo</th>\r\n            <th>Fecha de creación</th>\r\n            <th>Estado</th>\r\n            <th>Acciones</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user, index) => (\r\n            <tr key={user.userId}>\r\n              <td>{index + 1}</td>\r\n              <td>{user.userName}</td>\r\n              <td>{user.PersonName}</td>\r\n              <td>{user.personEmail}</td>\r\n              <td>{user.personPhoneNumber}</td>\r\n              <td>{user.personTypeName === \"Owner\" ? \"Dueño\" : \"Cliente\"}</td>\r\n              <td>{new Date(user.userCreatedAt).toLocaleString()}</td>\r\n              <td>\r\n                <span\r\n                  className={`estado-${user.userStatus === 1 ? \"validado\" : user.userStatus === 0 ? \"pendiente\" : \"eliminado\"}`}\r\n                >\r\n                  {user.userStatus === 1\r\n                    ? \"Validado\"\r\n                    : user.userStatus === 0\r\n                    ? \"Pendiente\"\r\n                    : \"Eliminado\"}\r\n                </span>\r\n              </td>\r\n              <td>\r\n                {user.userStatus !== \"Eliminado\" && (\r\n                  <>\r\n                    <button\r\n                      className=\"btn-validar\"\r\n                      onClick={() => updateUserStatus(user.userId, 1)}\r\n                    >\r\n                      Validar\r\n                    </button>\r\n                    <button\r\n                      className=\"btn-denegar\"\r\n                      onClick={() => updateUserStatus(user.userId, 0)}\r\n                    >\r\n                      Denegar\r\n                    </button>\r\n                  </>\r\n                )}\r\n                <button\r\n                  className=\"btn-eliminar\"\r\n                  onClick={() => updateUserStatus(user.userId, \"Eliminado\")}\r\n                >\r\n                  Eliminar\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VistaUsuario;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Para redirigir al LoginRegister.js\r\nimport axios from \"axios\"; // Importamos Axios\r\nimport \"./MenuAdmin.css\";\r\nimport VistaUsuario from \"./VistaUsuario\"; // Solo dejamos VistaUsuario\r\n\r\nconst MenuAdmin = () => {\r\n  const [activeComponent, setActiveComponent] = useState(\"\"); // Controla qué componente se muestra\r\n  const navigate = useNavigate();\r\n\r\n  const loadComponent = (component) => {\r\n    setActiveComponent(component);\r\n  };\r\n\r\n  const renderComponent = () => {\r\n    switch (activeComponent) {\r\n      case \"vistausuario\":\r\n        return <VistaUsuario />; // Carga la interfaz de validación de usuarios\r\n      default:\r\n        return (\r\n          <div className=\"dashboard\">\r\n            <h2>¡Bienvenido al Panel de Administración!</h2>\r\n            <p>Selecciona una opción del menú para empezar.</p>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Realizamos la solicitud POST con Axios\r\n      const response = await axios.post(\"https://api-degusto.onrender.com/api/user/logout\");\r\n\r\n      if (response.status === 200) {\r\n        // Redirige al componente LoginRegister.js\r\n        console.log('Sesión cerrandose');\r\n        navigate(\"/loginregister\"); // Cambia la ruta según cómo esté definida en tu sistema\r\n      } else {\r\n        console.error(\"Error al cerrar sesión:\", response.data);\r\n        alert(\"Hubo un problema al cerrar sesión.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error de red al cerrar sesión:\", error);\r\n      alert(\"Error de red. Por favor, intenta nuevamente.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-container\">\r\n      {/* Barra lateral */}\r\n      <nav className=\"admin-menu\">\r\n        <h3 className=\"menu-title\">Panel de Administración</h3>\r\n        <ul className=\"menu-list\">\r\n          <li\r\n            className={activeComponent === \"vistausuario\" ? \"active\" : \"\"}\r\n            onClick={() => loadComponent(\"vistausuario\")}\r\n          >\r\n            Validar Usuarios\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      {/* Contenido */}\r\n      <div className=\"admin-main\">\r\n        <header className=\"admin-header\">\r\n          <span>Bienvenido, Administrador</span>\r\n          <button className=\"btn-logout\" onClick={handleLogout}>Cerrar Sesión</button>\r\n        </header>\r\n        <div className=\"content\">{renderComponent()}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MenuAdmin;\r\n","import React from 'react';\nimport './App.css';\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport Inicio from './Inicio.js';\nimport LoginRegister from './LoginRegister.js';\nimport MenuFunctions from './MenuFunctions.js';\nimport MenuAdmin from './MenuAdmin';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes>\n          {/* Redirige de \"/\" a \"/home\" */}\n          <Route path=\"/\" element={<Navigate to=\"/home\" />} />\n          {/* Ruta por defecto de la página o tras un logout */}\n          <Route path=\"/home\" element={<Inicio />} />\n          {/* Ruta en donde vas a iniciar o registrar sesión */}\n          <Route path=\"/loginregister\" element={<LoginRegister />} />\n          {/* Ruta a la que rediriges tras hacer un login */}\n          <Route path=\"/menufunctions\" element={<MenuFunctions />} />\n          {/* Ruta a la que rediriges tras hacer un login como admin */}\n          <Route path=\"/menuadmin\" element={<MenuAdmin />} />\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\n// Cambia la importación de App a LoginRegister\n//import LoginRegister from './LoginRegister';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App.js';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    {/* Cambia <App /> por <LoginRegister /> */}\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}